$date
	Mon Feb  3 21:42:58 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module mult3bitTB $end
$var wire 6 ! result [5:0] $end
$var reg 3 " num1 [2:0] $end
$var reg 3 # num2 [2:0] $end
$scope module uut $end
$var wire 1 $ carry1 $end
$var wire 3 % num1 [2:0] $end
$var wire 3 & num2 [2:0] $end
$var wire 6 ' result [5:0] $end
$var wire 3 ( partial3 [2:0] $end
$var wire 3 ) partial2 [2:0] $end
$var wire 3 * partial1 [2:0] $end
$var wire 1 + carry4 $end
$var wire 1 , carry3 $end
$var wire 1 - carry2 $end
$scope module fa1 $end
$var wire 1 . A $end
$var wire 1 / B $end
$var wire 1 0 Cin $end
$var wire 1 $ Cout $end
$var wire 1 1 S $end
$var wire 1 2 AxB $end
$var wire 1 3 AnB2 $end
$var wire 1 4 AnB1 $end
$scope module h0 $end
$var wire 1 . A $end
$var wire 1 / B $end
$var wire 1 3 Cout $end
$var wire 1 2 S $end
$upscope $end
$scope module h1 $end
$var wire 1 2 A $end
$var wire 1 0 B $end
$var wire 1 4 Cout $end
$var wire 1 1 S $end
$upscope $end
$upscope $end
$scope module fa2 $end
$var wire 1 5 A $end
$var wire 1 6 B $end
$var wire 1 $ Cin $end
$var wire 1 - Cout $end
$var wire 1 7 S $end
$var wire 1 8 AxB $end
$var wire 1 9 AnB2 $end
$var wire 1 : AnB1 $end
$scope module h0 $end
$var wire 1 5 A $end
$var wire 1 6 B $end
$var wire 1 9 Cout $end
$var wire 1 8 S $end
$upscope $end
$scope module h1 $end
$var wire 1 8 A $end
$var wire 1 $ B $end
$var wire 1 : Cout $end
$var wire 1 7 S $end
$upscope $end
$upscope $end
$scope module fa3 $end
$var wire 1 ; A $end
$var wire 1 < B $end
$var wire 1 - Cin $end
$var wire 1 , Cout $end
$var wire 1 = S $end
$var wire 1 > AxB $end
$var wire 1 ? AnB2 $end
$var wire 1 @ AnB1 $end
$scope module h0 $end
$var wire 1 ; A $end
$var wire 1 < B $end
$var wire 1 ? Cout $end
$var wire 1 > S $end
$upscope $end
$scope module h1 $end
$var wire 1 > A $end
$var wire 1 - B $end
$var wire 1 @ Cout $end
$var wire 1 = S $end
$upscope $end
$upscope $end
$scope module fa4 $end
$var wire 1 A A $end
$var wire 1 B B $end
$var wire 1 , Cin $end
$var wire 1 + Cout $end
$var wire 1 C S $end
$var wire 1 D AxB $end
$var wire 1 E AnB2 $end
$var wire 1 F AnB1 $end
$scope module h0 $end
$var wire 1 A A $end
$var wire 1 B B $end
$var wire 1 E Cout $end
$var wire 1 D S $end
$upscope $end
$scope module h1 $end
$var wire 1 D A $end
$var wire 1 , B $end
$var wire 1 F Cout $end
$var wire 1 C S $end
$upscope $end
$upscope $end
$scope module fa5 $end
$var wire 1 G A $end
$var wire 1 H B $end
$var wire 1 + Cin $end
$var wire 1 $ Cout $end
$var wire 1 I S $end
$var wire 1 J AxB $end
$var wire 1 K AnB2 $end
$var wire 1 L AnB1 $end
$scope module h0 $end
$var wire 1 G A $end
$var wire 1 H B $end
$var wire 1 K Cout $end
$var wire 1 J S $end
$upscope $end
$scope module h1 $end
$var wire 1 J A $end
$var wire 1 + B $end
$var wire 1 L Cout $end
$var wire 1 I S $end
$upscope $end
$upscope $end
$scope module fa6 $end
$var wire 1 M A $end
$var wire 1 N B $end
$var wire 1 $ Cin $end
$var wire 1 O Cout $end
$var wire 1 P S $end
$var wire 1 Q AxB $end
$var wire 1 R AnB2 $end
$var wire 1 S AnB1 $end
$scope module h0 $end
$var wire 1 M A $end
$var wire 1 N B $end
$var wire 1 R Cout $end
$var wire 1 Q S $end
$upscope $end
$scope module h1 $end
$var wire 1 Q A $end
$var wire 1 $ B $end
$var wire 1 S Cout $end
$var wire 1 P S $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
0S
0R
0Q
0P
0O
0N
0M
0L
0K
0J
0I
0H
0G
0F
0E
0D
0C
0B
0A
0@
0?
0>
0=
0<
0;
0:
09
08
07
06
05
04
03
02
01
00
0/
0.
0-
0,
0+
b0 *
b0 )
b0 (
b0 '
b0 &
b0 %
0$
b0 #
b0 "
b0 !
$end
#10
b1 !
b1 '
11
12
1.
b1 *
b1 #
b1 &
b1 "
b1 %
#20
01
b10 !
b10 '
17
02
18
0.
15
b10 *
b10 "
b10 %
#30
b11 !
b11 '
11
12
05
16
1/
b0 *
b11 )
b10 #
b10 &
b11 "
b11 %
#40
1C
01
b1000 !
b1000 '
07
1,
02
08
1?
1;
0/
06
1<
b100 *
b100 )
b11 #
b11 &
b100 "
b100 %
#50
1L
1O
17
1=
1+
0P
1S
1$
1-
0C
1F
b110 !
b110 '
0I
1Q
13
19
1D
1J
1N
1.
15
1/
16
1B
1H
b111 *
b111 )
b111 (
b111 #
b111 &
b111 "
b111 %
#60
0O
0+
07
1P
0S
1C
0F
11
0$
0,
0-
b101101 !
b101101 '
0I
0L
12
03
1>
0?
09
0J
0.
0;
05
06
0H
b0 *
b101 )
b101 (
b110 #
b110 &
b101 "
b101 %
#70
17
01
0C
b110110 !
b110110 '
1I
18
02
0D
1J
1;
0<
15
0/
0B
1H
b110 *
b0 )
b110 (
b101 #
b101 &
b110 "
b110 %
#80
