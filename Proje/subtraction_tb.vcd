$date
	Tue Dec 17 21:32:46 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module tb_subtraction $end
$var wire 1 ! overflow $end
$var wire 4 " Y [3:0] $end
$var wire 1 # CarryOUT $end
$var reg 4 $ A [3:0] $end
$var reg 4 % B [3:0] $end
$var reg 1 & CarryIN $end
$scope module uut $end
$var wire 4 ' A [3:0] $end
$var wire 4 ( B [3:0] $end
$var wire 1 & CarryIN $end
$var wire 4 ) xB [3:0] $end
$var wire 1 ! overflow $end
$var wire 4 * notB [3:0] $end
$var wire 4 + Y1 [3:0] $end
$var wire 4 , Y [3:0] $end
$var wire 1 # CarryOUT $end
$scope module a1 $end
$var wire 4 - A [3:0] $end
$var wire 4 . B [3:0] $end
$var wire 1 / CarryIN $end
$var wire 1 0 overflow $end
$var wire 4 1 Y [3:0] $end
$var wire 1 2 CarryOUT $end
$var wire 4 3 Carry4 [3:0] $end
$scope module F0 $end
$var wire 1 4 A $end
$var wire 1 5 B $end
$var wire 1 / CarryIn $end
$var wire 1 6 CarryO $end
$var wire 1 7 sum1 $end
$var wire 1 8 and2 $end
$var wire 1 9 and1 $end
$var wire 1 : Sum $end
$scope module HA1 $end
$var wire 1 4 A $end
$var wire 1 5 B $end
$var wire 1 9 Carry $end
$var wire 1 7 Sum $end
$upscope $end
$scope module HA2 $end
$var wire 1 7 A $end
$var wire 1 / B $end
$var wire 1 8 Carry $end
$var wire 1 : Sum $end
$upscope $end
$upscope $end
$scope module F1 $end
$var wire 1 ; A $end
$var wire 1 < B $end
$var wire 1 = CarryIn $end
$var wire 1 > CarryO $end
$var wire 1 ? sum1 $end
$var wire 1 @ and2 $end
$var wire 1 A and1 $end
$var wire 1 B Sum $end
$scope module HA1 $end
$var wire 1 ; A $end
$var wire 1 < B $end
$var wire 1 A Carry $end
$var wire 1 ? Sum $end
$upscope $end
$scope module HA2 $end
$var wire 1 ? A $end
$var wire 1 = B $end
$var wire 1 @ Carry $end
$var wire 1 B Sum $end
$upscope $end
$upscope $end
$scope module F2 $end
$var wire 1 C A $end
$var wire 1 D B $end
$var wire 1 E CarryIn $end
$var wire 1 F CarryO $end
$var wire 1 G sum1 $end
$var wire 1 H and2 $end
$var wire 1 I and1 $end
$var wire 1 J Sum $end
$scope module HA1 $end
$var wire 1 C A $end
$var wire 1 D B $end
$var wire 1 I Carry $end
$var wire 1 G Sum $end
$upscope $end
$scope module HA2 $end
$var wire 1 G A $end
$var wire 1 E B $end
$var wire 1 H Carry $end
$var wire 1 J Sum $end
$upscope $end
$upscope $end
$scope module F3 $end
$var wire 1 K A $end
$var wire 1 L B $end
$var wire 1 M CarryIn $end
$var wire 1 2 CarryO $end
$var wire 1 N sum1 $end
$var wire 1 O and2 $end
$var wire 1 P and1 $end
$var wire 1 Q Sum $end
$scope module HA1 $end
$var wire 1 K A $end
$var wire 1 L B $end
$var wire 1 P Carry $end
$var wire 1 N Sum $end
$upscope $end
$scope module HA2 $end
$var wire 1 N A $end
$var wire 1 M B $end
$var wire 1 O Carry $end
$var wire 1 Q Sum $end
$upscope $end
$upscope $end
$upscope $end
$scope module a2 $end
$var wire 4 R A [3:0] $end
$var wire 4 S B [3:0] $end
$var wire 1 & CarryIN $end
$var wire 1 T overflow $end
$var wire 4 U Y [3:0] $end
$var wire 1 # CarryOUT $end
$var wire 4 V Carry4 [3:0] $end
$scope module F0 $end
$var wire 1 W A $end
$var wire 1 X B $end
$var wire 1 & CarryIn $end
$var wire 1 Y CarryO $end
$var wire 1 Z sum1 $end
$var wire 1 [ and2 $end
$var wire 1 \ and1 $end
$var wire 1 ] Sum $end
$scope module HA1 $end
$var wire 1 W A $end
$var wire 1 X B $end
$var wire 1 \ Carry $end
$var wire 1 Z Sum $end
$upscope $end
$scope module HA2 $end
$var wire 1 Z A $end
$var wire 1 & B $end
$var wire 1 [ Carry $end
$var wire 1 ] Sum $end
$upscope $end
$upscope $end
$scope module F1 $end
$var wire 1 ^ A $end
$var wire 1 _ B $end
$var wire 1 ` CarryIn $end
$var wire 1 a CarryO $end
$var wire 1 b sum1 $end
$var wire 1 c and2 $end
$var wire 1 d and1 $end
$var wire 1 e Sum $end
$scope module HA1 $end
$var wire 1 ^ A $end
$var wire 1 _ B $end
$var wire 1 d Carry $end
$var wire 1 b Sum $end
$upscope $end
$scope module HA2 $end
$var wire 1 b A $end
$var wire 1 ` B $end
$var wire 1 c Carry $end
$var wire 1 e Sum $end
$upscope $end
$upscope $end
$scope module F2 $end
$var wire 1 f A $end
$var wire 1 g B $end
$var wire 1 h CarryIn $end
$var wire 1 i CarryO $end
$var wire 1 j sum1 $end
$var wire 1 k and2 $end
$var wire 1 l and1 $end
$var wire 1 m Sum $end
$scope module HA1 $end
$var wire 1 f A $end
$var wire 1 g B $end
$var wire 1 l Carry $end
$var wire 1 j Sum $end
$upscope $end
$scope module HA2 $end
$var wire 1 j A $end
$var wire 1 h B $end
$var wire 1 k Carry $end
$var wire 1 m Sum $end
$upscope $end
$upscope $end
$scope module F3 $end
$var wire 1 n A $end
$var wire 1 o B $end
$var wire 1 p CarryIn $end
$var wire 1 # CarryO $end
$var wire 1 q sum1 $end
$var wire 1 r and2 $end
$var wire 1 s and1 $end
$var wire 1 t Sum $end
$scope module HA1 $end
$var wire 1 n A $end
$var wire 1 o B $end
$var wire 1 s Carry $end
$var wire 1 q Sum $end
$upscope $end
$scope module HA2 $end
$var wire 1 q A $end
$var wire 1 p B $end
$var wire 1 r Carry $end
$var wire 1 t Sum $end
$upscope $end
$upscope $end
$upscope $end
$scope module od1 $end
$var wire 4 u A [3:0] $end
$var wire 4 v B [3:0] $end
$var wire 1 # CarryOUT $end
$var wire 4 w Y [3:0] $end
$var wire 2 x opCode [1:0] $end
$var wire 1 ! overflowDetect $end
$var wire 4 y signedA [3:0] $end
$var wire 4 z signedB [3:0] $end
$var wire 4 { signedY [3:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
b10 {
b1 z
b11 y
b10 x
b10 w
b1 v
b11 u
0t
0s
1r
1q
1p
1o
0n
0m
0l
1k
1j
1i
1h
1g
0f
1e
1d
0c
0b
1a
1`
1_
1^
0]
1\
0[
0Z
1Y
1X
1W
bz111 V
b10 U
zT
b1111 S
b11 R
1Q
0P
0O
1N
0M
0L
1K
1J
0I
0H
1G
0F
0E
0D
1C
1B
0A
0@
1?
0>
0=
0<
1;
1:
09
08
17
06
15
04
bz000 3
02
b1111 1
z0
0/
b1 .
b1110 -
b10 ,
b10 +
b1111 *
b1110 )
b1 (
b11 '
0&
b1 %
b11 $
1#
b10 "
0!
$end
#10
0h
0a
0d
1b
0_
b1101 *
b1101 1
b1101 S
0B
1e
b11 "
b11 ,
0?
0`
0;
bz100 V
0Y
1]
0k
b11 {
b11 +
b11 U
b11 w
0m
b1100 )
b1100 -
0\
1Z
1l
0j
1!
0W
1f
b11 z
b11 %
b11 (
b11 v
b110 y
b110 $
b110 '
b110 R
b110 u
#20
1_
b1111 *
b1111 1
b1111 S
1B
b111 "
b111 ,
1?
0p
1;
1e
bz000 V
0i
1m
0r
b111 {
b111 +
b111 U
b111 w
0t
b1110 )
b1110 -
1b
0l
1j
1s
0q
0^
0f
1n
b1 z
b1 %
b1 (
b1 v
b1000 y
b1000 $
b1000 '
b1000 R
b1000 u
#30
1c
1k
0_
0g
0o
0B
0J
b1 *
b1 1
b1 S
0Q
0r
b1000 "
b1000 ,
0?
0G
0N
1`
1h
1p
0!
0;
0C
0K
1Y
0]
1a
0e
bz111 V
1i
0m
0#
b1000 {
b1000 +
b1000 U
b1000 w
1t
b0 )
b0 -
1\
0Z
0d
1b
0l
1j
0s
0q
1W
1^
1f
0n
b1111 z
b1111 %
b1111 (
b1111 v
b111 y
b111 $
b111 '
b111 R
b111 u
#40
